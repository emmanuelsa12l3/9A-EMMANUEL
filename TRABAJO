El grupo ivestigrá todo lo relacionado con Github, Creación, historia, función, ventajas y desventajas, asi mismo se dividiran el tema y cada uno dará un informe detallado del tema, también deberan dar comentarios y aportes a la información dada por sus compañeros.
Anyelin Rojas
CREACION
La idea de GitHub surgió en 2005 con un ingeniero de software finlandés-estadounidense Linus Torvalds, mas GitHub no fue creado sino hasta el 2008. El desarrollo de la plataforma comenzó en febrero de 2008 y el primer commit de código fue realizado por Chris Wanstrath, uno de los cofundadores. GitHub se creó para solucionar el problema de que Git no permite que todos los desarrolladores vean el código compartido en una sola ubicación. Ademas de que puedes almacenar, compartir y colaborar con otros para escribir código.
HISTORIA
En el intervalo entre la invención de Git en 2005 y el lanzamiento de GitHub en abril de 2008, los nuevos usuarios comenzaron a familiarizarse con el sistema Git, con su trabajo curado por el moderador principal y el ingeniero de software japonés.Junio ​​Hamano. Hamano se ofreció como voluntario para ayudar a gestionar el proyecto después de que Torvalds se alejara para centrarse en su trabajo con Linux. Si bien Torvalds es reconocido como el inventor de Git, cree que Hamano debería recibir la mayor parte del crédito por la evolución del sistema. A veces se refieren a Hamano como el "dictador benevolente" de Git, ya que sus decisiones suelen ser definitivas, y ha continuado gestionando el proyecto desde que Torvalds lo nombró en 2005.
Otros ingenieros voluntarios también ayudaron a que Git fuera más accesible para diferentes sistemas operativos y nuevos usuarios. En 2007, uno de esos nuevos usuarios fue Tom Preston-Werner quien identificó que Git se beneficiaría de un sistema de alojamiento descentralizado para proyectos, código fuente e interacción con el usuario. Esta idea fue la que motivó la creación de GitHub.
Preston-Werner se unió a sus compañeros desarrolladores Chris Wanstrath, Scott Chacon y PJ Hyett para crear la nueva plataforma. Mediante suscripciones de pago, el grupo creó GitHub en una época en la que no existían otros sistemas de almacenamiento en la nube de Git. Una vez que la noticia de la sencilla plataforma de código abierto de Git se extendió entre otros desarrolladores, GitHub despegó de inmediato. Empresas como Google , Facebook , Microsoft y Twitter (ahora X ) comenzaron a desarrollar proyectos en GitHub, y gran parte del trabajo de estas empresas es de código abierto .

JUAN MANUEL CORREA JIMENEZ
FUNCION
GitHub es una plataforma de desarrollo colaborativo que permite almacenar, gestionar y compartir proyectos de software, principalmente mediante el uso del sistema de control de versiones Git.

Funciones principales de GitHub:
Control de versiones: Permite llevar un historial de cambios en el código, facilitando el seguimiento y la reversión de versiones anteriores.

Colaboración: Varios desarrolladores pueden trabajar en el mismo proyecto al mismo tiempo, enviando cambios mediante "pull requests".

Almacenamiento de código: Aloja repositorios de código fuente, ya sea de forma pública o privada.

Gestión de proyectos: Ofrece herramientas para tareas, seguimiento de errores (issues), wikis y planificación de versiones.

Integración continua y despliegue: Se puede integrar con otras herramientas para pruebas automáticas y despliegues automáticos del software.

Revisión de código: Los equipos pueden revisar y comentar cambios antes de que se integren en el proyecto principal.
juanpablo 
📉 Desventajas de GitHub:
Privacidad limitada en el plan gratuito:
Aunque ha mejorado, el plan gratuito todavía tiene ciertas limitaciones para proyectos privados, especialmente en entornos corporativos donde se manejan datos sensibles.

Dependencia de conexión a Internet:
GitHub es una plataforma basada en la nube, por lo que necesitas estar en línea para acceder a la mayoría de sus funcionalidades (pull requests, issues, etc.).

Curva de aprendizaje para principiantes:
Usuarios nuevos en Git y GitHub pueden encontrarlo confuso al principio. Comandos como merge, rebase o el manejo de conflictos pueden ser intimidantes.

Costos en organizaciones grandes:
Para equipos grandes o empresas, los planes pagos pueden volverse costosos, especialmente si se necesitan funciones avanzadas como GitHub Enterprise.

Propiedad por Microsoft:
Algunas personas y organizaciones desconfían del hecho de que GitHub pertenece a Microsoft, por cuestiones de control, privacidad o filosofía open-source.

No ideal para grandes archivos binarios:
Aunque existe Git LFS (Large File Storage), GitHub no está diseñado para manejar archivos binarios muy grandes como videos o datasets pesados.

Interfaz web puede ser limitada:
Aunque potente, ciertas tareas avanzadas de Git (como resolución compleja de conflictos) requieren el uso de la línea de comandos o herramientas externas.


EMMANUEL DAVID
VENTAJAS DE GIT HUB
1. Control de versiones con Git
Permite rastrear todos los cambios en el código fuente.

Facilita revertir a versiones anteriores si se introducen errores.

2. Colaboración efectiva
Los equipos pueden trabajar juntos en el mismo proyecto desde cualquier lugar.

Pull requests permiten revisar y discutir cambios antes de fusionarlos.

3. Gestión de proyectos
Ofrece herramientas como issues, milestones y proyectos (kanban) para planificar y hacer seguimiento del trabajo.

4. Integración continua y despliegue (CI/CD)
Puedes automatizar pruebas y despliegues mediante GitHub Actions u otras herramientas integradas.

5. Documentación y wikis
Puedes documentar tu proyecto directamente en el repositorio con archivos README.md y wikis.

6. Comunidad y código abierto
Gran cantidad de proyectos de código abierto disponibles para aprender, contribuir o reutilizar.

Fomenta el aprendizaje colaborativo.

7. Seguridad
GitHub escanea vulnerabilidades conocidas en dependencias.

Permite establecer reglas de protección de ramas y requerimientos de revisión.

8. Visibilidad y portafolio profesional
Repositorios públicos pueden actuar como portafolio para mostrar tus habilidades a empleadores o colaboradores.
